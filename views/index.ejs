<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Análise Numérica</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="min-h-screen bg-gradient-to-br from-purple-50 via-blue-50 to-indigo-50">
    <div
        class="absolute inset-0 bg-[url('https://images.unsplash.com/photo-1614850715649-1d0106293bd1?q=80&w=2070')] bg-cover opacity-5">
    </div>

    <div class="container mx-auto px-4 py-12 relative">
        <!-- Header Section -->
        <div class="flex flex-col items-center justify-center gap-4 mb-16">
            <div class="bg-gradient-to-r from-indigo-600 to-purple-600 p-4 rounded-2xl shadow-lg">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="w-20 h-20 text-white">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M15.75 15.75V18m-7.5-6.75h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V13.5Zm0 2.25h.008v.008H8.25v-.008Zm0 2.25h.008v.008H8.25V18Zm2.498-6.75h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V13.5Zm0 2.25h.007v.008h-.007v-.008Zm0 2.25h.007v.008h-.007V18Zm2.504-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5Zm0 2.25h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V18Zm2.498-6.75h.008v.008h-.008v-.008Zm0 2.25h.008v.008h-.008V13.5ZM8.25 6h7.5v2.25h-7.5V6ZM12 2.25c-1.892 0-3.758.11-5.593.322C5.307 2.7 4.5 3.65 4.5 4.757V19.5a2.25 2.25 0 0 0 2.25 2.25h10.5a2.25 2.25 0 0 0 2.25-2.25V4.757c0-1.108-.806-2.057-1.907-2.185A48.507 48.507 0 0 0 12 2.25Z" />
                </svg>
            </div>
            <h1 class="text-6xl font-bold bg-gradient-to-r from-indigo-600 to-purple-600 bg-clip-text text-transparent">
                Análise Numérica
            </h1>
            <p class="text-gray-600 text-xl mt-2 flex items-center gap-2">
                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                    stroke="currentColor" class="w-6 h-6 text-gray-600">
                    <path stroke-linecap="round" stroke-linejoin="round"
                        d="M9.813 15.904 9 18.75l-.813-2.846a4.5 4.5 0 0 0-3.09-3.09L2.25 12l2.846-.813a4.5 4.5 0 0 0 3.09-3.09L9 5.25l.813 2.846a4.5 4.5 0 0 0 3.09 3.09L15.75 12l-2.846.813a4.5 4.5 0 0 0-3.09 3.09ZM18.259 8.715 18 9.75l-.259-1.035a3.375 3.375 0 0 0-2.455-2.456L14.25 6l1.036-.259a3.375 3.375 0 0 0 2.455-2.456L18 2.25l.259 1.035a3.375 3.375 0 0 0 2.456 2.456L21.75 6l-1.035.259a3.375 3.375 0 0 0-2.456 2.456Z" />
                </svg>
                Insira números para análise estatística
            </p>
        </div>

        <!-- Input Section -->
        <div class="max-w-2xl mx-auto mb-16">
            <div class="bg-white/90 p-3 rounded-2xl shadow-xl border border-indigo-100 backdrop-blur-sm">
                <div class="flex items-center gap-3 px-4 mb-2">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                        stroke="currentColor" class="w-5 h-5 text-indigo-600">
                        <path stroke-linecap="round" stroke-linejoin="round"
                            d="M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941" />
                    </svg>
                    <p class="text-indigo-600 font-medium">Digite um número para adicionar à análise</p>
                </div>

                <div class="flex gap-4">
                    <input id="inputNumber" type="number" placeholder="Digite um número"
                        class="flex-1 px-6 py-4 bg-transparent text-gray-800 placeholder-gray-400 text-xl border-0 focus:ring-0 outline-none" />
                    <button id="addButton"
                        class="px-8 py-4 bg-gradient-to-r from-indigo-600 to-purple-600 text-white rounded-xl hover:from-indigo-700 hover:to-purple-700 transition-all duration-300 flex items-center gap-2 font-semibold text-lg shadow-md group">
                        Adicionar
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="size-6">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3" />
                        </svg>
                    </button>
                </div>
            </div>
        </div>

        <!-- Stats Grid -->
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8 mb-16">
            <!-- Mean Card -->
            <div
                class="bg-white/90 rounded-3xl p-8 shadow-xl border border-indigo-100 backdrop-blur-sm hover:scale-105 transition-transform duration-300">
                <div class="flex items-center gap-3 mb-6">
                    <div class="bg-indigo-100 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="w-8 h-8 text-indigo-600">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941" />
                        </svg>
                    </div>
                    <h2 class="text-2xl font-semibold text-indigo-900">Média Aritmética</h2>
                </div>
                <p id="meanDisplay" class="text-5xl font-bold text-center text-indigo-600 tracking-tight mb-6">
                    0.00
                </p>
            </div>

            <!-- Positive Numbers Card -->
            <div
                class="bg-white/90 rounded-3xl p-8 shadow-xl border border-indigo-100 backdrop-blur-sm hover:scale-105 transition-transform duration-300">
                <div class="flex items-center gap-3 mb-6">
                    <div class="bg-green-100 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="w-8 h-8 text-green-600">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M12 2v10.5a6.506 6.506 0 0 1 3 0V2a6.506 6.506 0 0 1 3 0V20l-3-1.5V14.25a6.503 6.503 0 0 1-3 0V20l-3-1.5V14.25a6.502 6.502 0 0 1 3 0V14.25c-1.313-.187-2.392-.525-3.25-.75V7.5a6.505 6.505 0 0 1-3 0Z" />
                        </svg>
                    </div>
                    <h2 class="text-2xl font-semibold text-green-900">Números Positivos</h2>
                </div>
                <p id="positiveDisplay" class="text-5xl font-bold text-center text-green-600 tracking-tight mb-6">0</p>
                <p class="text-xl text-center text-green-600">Percentual: <span id="positivePercentage">0%</span></p>
            </div>

            <!-- Negative Numbers Card -->
            <div
                class="bg-white/90 rounded-3xl p-8 shadow-xl border border-indigo-100 backdrop-blur-sm hover:scale-105 transition-transform duration-300">
                <div class="flex items-center gap-3 mb-6">
                    <div class="bg-red-100 p-2 rounded-lg">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5"
                            stroke="currentColor" class="w-8 h-8 text-red-600">
                            <path stroke-linecap="round" stroke-linejoin="round"
                                d="M12 3v18M6 12h12" />
                        </svg>
                    </div>
                    <h2 class="text-2xl font-semibold text-red-900">Números Negativos</h2>
                </div>
                <p id="negativeDisplay" class="text-5xl font-bold text-center text-red-600 tracking-tight mb-6">0</p>
                <p class="text-xl text-center text-red-600">Percentual: <span id="negativePercentage">0%</span></p>
            </div>
        </div>

        <!-- Number List Section -->
        <div>
            <h2 class="text-2xl text-indigo-600 font-semibold mb-4">Números Inseridos</h2>
            <ul id="numberList" class="text-xl text-gray-800 space-y-2"></ul>
        </div>
    </div>

    <script>
        const numbers = [];
        const input = document.getElementById("inputNumber");
        const addButton = document.getElementById("addButton");

        // Seletores para atualizar estatísticas
        const meanDisplay = document.getElementById("meanDisplay");
        const positiveDisplay = document.getElementById("positiveDisplay");
        const negativeDisplay = document.getElementById("negativeDisplay");
        const positivePercentage = document.getElementById("positivePercentage");
        const negativePercentage = document.getElementById("negativePercentage");

        // Campo de lista para os números inseridos
        const numberList = document.getElementById("numberList");

        // Função para calcular a média com números negativos sendo subtraídos
        function calculateMean(nums) {
            const totalSum = nums.reduce((acc, num) => acc + num, 0); // Somando todos os números
            return nums.length ? (totalSum / nums.length).toFixed(2) : "0.00";
        }

        // Função para calcular os percentuais de números positivos e negativos
        function calculatePercentages(positiveCount, negativeCount, totalCount) {
            const positivePercentageValue = totalCount ? ((positiveCount / totalCount) * 100).toFixed(2) : 0;
            const negativePercentageValue = totalCount ? ((negativeCount / totalCount) * 100).toFixed(2) : 0;
            return { positivePercentageValue, negativePercentageValue };
        }

        // Função para atualizar as estatísticas
        function updateStats() {
            const positiveNumbers = numbers.filter(num => num > 0);
            const negativeNumbers = numbers.filter(num => num < 0);
            const totalNumbers = numbers.length;

            meanDisplay.textContent = calculateMean(numbers);
            positiveDisplay.textContent = positiveNumbers.length;
            negativeDisplay.textContent = negativeNumbers.length;

            const { positivePercentageValue, negativePercentageValue } = calculatePercentages(
                positiveNumbers.length,
                negativeNumbers.length,
                totalNumbers
            );

            positivePercentage.textContent = `${positivePercentageValue}%`;
            negativePercentage.textContent = `${negativePercentageValue}%`;
        }

        // Função para atualizar a lista de números
        function updateNumberList() {
            numberList.innerHTML = ''; // Limpa a lista
            numbers.forEach(num => {
                const listItem = document.createElement('li');
                listItem.textContent = num;
                numberList.appendChild(listItem);
            });
        }

        // Evento de adição de número
        addButton.addEventListener("click", () => {
            const number = parseFloat(input.value);
            if (!isNaN(number)) {
                numbers.push(number);
                updateStats();
                updateNumberList();
                input.value = ""; // Limpa o campo
            } else {
                alert("Por favor, insira um número válido.");
            }
        });
    </script>
</body>

</html>